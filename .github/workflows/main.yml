name: test and build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.16.0
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: v1-npm-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: v1-npm-deps-
      - run: npx --package @rollup/rollup-linux-x64-gnu --package playwright playwright install --with-deps webkit
      - run: npm install
      - run: npm run lint
      - run: npm run test:ci
      - uses: mikepenz/action-junit-report@v4
        if: success() || failure()
        with:
          check_name: "report"
          include_passed: true
          report_paths: "**/reports/junit.xml"

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.16.0
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: v1-npm-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: v1-npm-deps-
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v3
        if: success() && github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        with:
          name: latest
          path: dist

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/configure-pages@v3
      - uses: actions/download-artifact@v3
        with:
          name: latest
          path: dist
      - uses: actions/upload-pages-artifact@v1
        with:
          path: "dist"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  release:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.16.0
          registry-url: https://registry.npmjs.org/
      - uses: actions/download-artifact@v3
        with:
          name: latest
          path: dist

      - run: git config user.email "${{ vars.NPM_EMAIL }}"
      - run: git config user.name "${{ vars.NPM_USER }}"
      - run: npx release-it --ci --verbose
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
